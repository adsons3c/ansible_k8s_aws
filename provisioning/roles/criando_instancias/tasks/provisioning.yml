 - name: criando o sec group
   local_action:
     module: ec2_group
     name: "{{ sec_group_name }}"
     description: sg Curso Ansible
     profile: "{{ profile }}"
     region: "{{ region }}"
     rules:
     - proto: tcp
       from_port: 22
       to_port: 22
       cidr_ip: 0.0.0.0/0
       rule_desc: SSH
     - proto: tcp
       from_port: 2379
       to_port: 2380
       cidr_ip: 0.0.0.0/0
       rule_desc: etcd server API
     - proto: tcp
       from_port: 6443
       to_port: 6443
       cidr_ip: 0.0.0.0/0
       rule_desc: kube-apiserver
     - proto: tcp
       from_port: 10250
       to_port: 10250
       cidr_ip: 0.0.0.0/0
       rule_desc: Kubelet API
     - proto: tcp
       from_port: 10251
       to_port: 10251
       cidr_ip: 0.0.0.0/0
       rule_desc: kube-scheduler
     - proto: tcp
       from_port: 10252
       to_port: 10252
       cidr_ip: 0.0.0.0/0
       rule_desc: kube-controller-manager
     - proto: tcp
       from_port: 10255
       to_port: 10255
       cidr_ip: 0.0.0.0/0
       rule_desc: Kubelet API Read-only
     - proto: tcp
       from_port: 30000
       to_port: 32767
       cidr_ip: 0.0.0.0/0
       rule_desc: NodePort Services
     - proto: tcp
       from_port: 6783
       to_port: 6783
       cidr_ip: 0.0.0.0/0
       rule_desc: WeaveNet
     - proto: udp
       from_port: 6783
       to_port: 6783
       cidr_ip: 0.0.0.0/0
       rule_desc: Weavenet
     - proto: udp
       from_port: 6784
       to_port: 6784
       cidr_ip: 0.0.0.0/0
       rule_desc: Weavenet
     - proto: tcp
       from_port: 32222
       to_port: 32222
       cidr_ip: 0.0.0.0/0
       rule_desc: GiropopsApp
     - proto: tcp
       from_port: 32111
       to_port: 32111
       cidr_ip: 0.0.0.0/0
       rule_desc: GiropopsApp
     rules_egress:
     rules_egress:
     rules_egress:
     - proto: all
       cidr_ip: 0.0.0.0/0
   register: basic_firewall

 - name: criando a instancia server EC2
   local_action: ec2
     group={{ sec_group_name }}
     instance_type={{ server_instance_type }}
     image={{ image }}
     profile={{ profile }}
     wait=true
     region={{ region }}
     keypair={{ keypair }}
     count={{ count_server }}
   register: ec2_server

 - name: Adicionando a instancia ao Grupo
   add_host:
     hostname: "{{ item.public_ip }}"
     groupname: ansible_new
   loop: "{{ ec2_server.instances }}"

 - name: criando a instancia workers EC2
   local_action: ec2
     group={{ sec_group_name }}
     instance_type={{ workers_instance_type }}
     image={{ image }}
     profile={{ profile }}
     wait=true
     region={{ region }}
     keypair={{ keypair }}
     count={{ count_workers }}
   register: ec2_workers

 - name: Adicionando a instancia ao Grupo
   add_host:
     hostname: "{{ item.public_ip }}"
     groupname: ansible_new
   loop: "{{ ec2_workers.instances }}"

 - name: Adicionando IP publico da instancia server ao arquivo hosts
   lineinfile:
     path: "{{ hostpath }}"
     insertafter: '\[server_public_ip\]'
     line: "{{ item.public_ip }}"
   with_items: "{{ ec2_server.instances }}"

 - name: Adicionando o IP privado da instancia server ao arquivo hosts
   lineinfile:
     path: "{{ hostpath }}"
     insertafter: '\[server_private_ip\]'
     line: "{{ item.private_ip }}"
   with_items: "{{ ec2_server.instances }}"

 - name: Adicionando IP publico dos workers ao arquivo hosts
   lineinfile:
     path: "{{ hostpath }}"
     insertafter: '\[worker_public_ip\]'
     line: "{{ item.public_ip }}"
   with_items: "{{ ec2_workers.instances }}"

 - name: Adicionando o IPs privados dos workers ao arquivo hosts
   lineinfile:
     path: "{{ hostpath }}"
     insertafter: '\[worker_private_ip\]'
     line: "{{ item.private_ip }}"
   with_items: "{{ ec2_workers.instances }}"

 - name: Esperando o SSH
   local_action: wait_for
     port=22
     state=started
   with_items: "{{ ec2_server.instances }}"

 - name: Adicionando uma tag na instancia server
   local_action: ec2_tag resource={{ item.id }} region={{ region }} profile={{ profile }} state=present
   with_items: "{{ ec2_server.instances }}"
   args:
     tags:
       name: server_{{ item.ami_launch_index|int + 1}}

 - name: Adicionando uma tag nas instancias workers
   local_action: ec2_tag resource={{ item.id }} region={{ region }} profile={{ profile }} state=present
   with_items: "{{ ec2_workers.instances }}"
   args:
     tags:
       name: workers_{{ item.ami_launch_index|int + 1}}
